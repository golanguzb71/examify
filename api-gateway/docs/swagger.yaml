definitions:
  models.CreateAnswer:
    properties:
      answers:
        items:
          type: string
        type: array
      sectionType:
        type: string
    required:
    - answers
    type: object
  pb.Answer:
    properties:
      bookId:
        type: integer
      id:
        type: integer
      sectionAnswer:
        items:
          type: string
        type: array
      sectionType:
        type: string
    type: object
  pb.CreateInlineAttemptRequest:
    properties:
      examId:
        type: string
      sectionType:
        type: string
      userAnswer:
        items:
          type: string
        type: array
    type: object
  pb.CreateOutlineAttemptRequestWriting:
    properties:
      Qua:
        items:
          $ref: '#/definitions/pb.QuestionUserAnswerWriting'
        type: array
      examId:
        type: string
    type: object
  pb.GetAnswerResponse:
    properties:
      answers:
        items:
          $ref: '#/definitions/pb.Answer'
        type: array
    type: object
  pb.GetBonusInformationByChatIdResponse:
    properties:
      bonusCount:
        type: integer
      more:
        items:
          $ref: '#/definitions/pb.GetMoreBonusInformation'
        type: array
      name:
        type: string
      refLink:
        type: string
      registeredAt:
        type: string
      welcomeCount:
        type: integer
    type: object
  pb.GetExamAbsResult:
    properties:
      bookName:
        type: string
      createdAt:
        type: string
      examId:
        type: string
      listening:
        type: string
      overall:
        type: string
      reading:
        type: string
      remainSection:
        type: string
      remainTimeForEndExam:
        type: integer
      speaking:
        type: string
      status:
        type: string
      writing:
        type: string
    type: object
  pb.GetExamByUserIdResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/pb.GetExamAbsResult'
        type: array
      totalPageCount:
        type: integer
    type: object
  pb.GetMoreBonusInformation:
    properties:
      guestChatId:
        type: string
      guestName:
        type: string
      guestRegisteredAt:
        type: string
    type: object
  pb.GetResultOutlineSpeakingResponse:
    properties:
      coherence_score:
        type: number
      fluency_score:
        type: number
      grammar_score:
        type: number
      part_band_score:
        type: number
      part_number:
        type: integer
      relevance_score:
        type: number
      topic_dev_score:
        type: number
      transcription:
        items:
          $ref: '#/definitions/pb.Transcription'
        type: array
      vocabulary_score:
        type: number
      word_count:
        type: integer
    type: object
  pb.GetResultOutlineWritingResponse:
    properties:
      answers:
        items:
          $ref: '#/definitions/pb.OutlineWritingResponseAbs'
        type: array
      sectionBandScore:
        type: integer
    type: object
  pb.GetResultResponse:
    properties:
      answers:
        items:
          $ref: '#/definitions/pb.UserAnswer'
        type: array
      bandScore:
        type: number
      createdAt:
        type: string
      id:
        type: string
    type: object
  pb.GetTopExamResult:
    properties:
      results:
        items:
          $ref: '#/definitions/pb.Result'
        type: array
      totalPageCount:
        type: integer
    type: object
  pb.OutlineWritingResponseAbs:
    properties:
      coherenceScore:
        type: integer
      createdAt:
        type: string
      feedback:
        type: string
      grammarScore:
        type: integer
      lexicalResourceScore:
        type: integer
      question:
        type: string
      taskAchievementScore:
        type: integer
      taskBandScore:
        type: integer
      taskNumber:
        type: integer
      userAnswer:
        type: string
    type: object
  pb.QuestionUserAnswerWriting:
    properties:
      question:
        type: string
      userAnswer:
        type: string
    type: object
  pb.Result:
    properties:
      bookName:
        type: string
      createdAt:
        type: string
      examId:
        type: string
      listening:
        type: string
      overall:
        type: string
      reading:
        type: string
      speaking:
        type: string
      user:
        $ref: '#/definitions/pb.User'
      writing:
        type: string
    type: object
  pb.Transcription:
    properties:
      feedback:
        type: string
      question:
        type: string
      transcription:
        type: string
      voiceUrl:
        type: string
    type: object
  pb.UpdateUserNameSurnameRequest:
    properties:
      name:
        type: string
      surname:
        type: string
      userId:
        type: string
    type: object
  pb.User:
    properties:
      chatId:
        type: string
      id:
        type: integer
      name:
        type: string
      phoneNumber:
        type: string
      role:
        type: string
      surname:
        type: string
      todayExamCount:
        type: integer
    type: object
  pb.UserAnswer:
    properties:
      isTrue:
        type: boolean
      trueAnswer:
        type: string
      userAnswer:
        type: string
    type: object
  utils.AbsResponse:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Examify Swagger
paths:
  /api/auth/login/{code}:
    post:
      consumes:
      - application/json
      description: Validate the authorization code and log in the user
      parameters:
      - description: Authorization Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Invalid code or login failed
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      summary: ALL
      tags:
      - auth
  /api/bonus/get-bonus-information-me:
    get:
      description: Retrieve bonus information by the current user's chat ID.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetBonusInformationByChatIdResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: USER
      tags:
      - bonus
  /api/ielts/answer/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve the answer associated with a specific book ID via gRPC.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Answer found
          schema:
            $ref: '#/definitions/pb.GetAnswerResponse'
        "502":
          description: Error while gRPC connection
          schema:
            type: string
      security:
      - Bearer: []
      summary: ROLE_ADMIN
      tags:
      - ielts-answer
  /api/ielts/answer/create/{bookId}:
    post:
      consumes:
      - application/json
      description: Create a new answer for a specified IELTS book
      parameters:
      - description: ID of the book
        in: path
        name: bookId
        required: true
        type: string
      - description: Answer content
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/models.CreateAnswer'
      produces:
      - application/json
      responses:
        "200":
          description: Answer created successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ROLE_ADMIN
      tags:
      - ielts-answer
  /api/ielts/answer/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an answer by its ID
      parameters:
      - description: ID of the answer
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Answer deleted successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ROLE_ADMIN
      tags:
      - ielts-answer
  /api/ielts/answer/update/{id}:
    put:
      consumes:
      - application/json
      description: Update answer associated with a specific ID via gRPC.
      parameters:
      - description: Answer ID
        in: path
        name: id
        required: true
        type: string
      - description: Answer New Name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SuccessFull
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "502":
          description: Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: ROLE_ADMIN
      tags:
      - ielts-answer
  /api/ielts/book/books:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all IELTS books
      produces:
      - application/json
      responses:
        "200":
          description: List of books
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      summary: ALL
      tags:
      - ielts-book
  /api/ielts/book/create/{name}:
    post:
      consumes:
      - application/json
      description: Create a new book for IELTS exam preparation
      parameters:
      - description: Name of the book
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Book created successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ROLE_ADMIN
      tags:
      - ielts-book
  /api/ielts/book/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an IELTS book by its ID
      parameters:
      - description: ID of the book
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Book deleted successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ROLE_ADMIN
      tags:
      - ielts-book
  /api/ielts/book/update/{id}:
    put:
      consumes:
      - application/json
      description: Retrieve the answer associated with a specific book ID via gRPC.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book New Name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SuccessFull
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "502":
          description: Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: ROLE_ADMIN
      tags:
      - ielts-book
  /api/ielts/exam/attempt/create/inline:
    post:
      consumes:
      - application/json
      description: Creates a new inline attempt for IELTS
      parameters:
      - description: Create inline attempt request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.CreateInlineAttemptRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: USER
      tags:
      - attempts
  /api/ielts/exam/attempt/create/outline-speaking/{examId}:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new inline attempt for IELTS
      parameters:
      - description: Exam ID
        in: path
        name: examId
        required: true
        type: string
      - description: Question
        in: query
        name: question
        required: true
        type: string
      - description: Part Number
        in: query
        name: partNumber
        required: true
        type: string
      - description: Voice Answer (only wav)
        in: formData
        name: voiceAnswer
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: USER
      tags:
      - attempts
  /api/ielts/exam/attempt/create/outline-writing:
    post:
      consumes:
      - application/json
      description: Creates a new inline attempt for IELTS
      parameters:
      - description: Create outline attempt request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.CreateOutlineAttemptRequestWriting'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: USER
      tags:
      - attempts
  /api/ielts/exam/create:
    post:
      consumes:
      - application/json
      description: This endpoint creates a new exam for the specified user and book.
      parameters:
      - description: Book ID
        in: query
        name: bookId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Exam created successfully, returning the exam ID
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Invalid input parameters
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: USER
      tags:
      - ielts-exam
  /api/ielts/exam/result/get-results-inline/{sectionType}/{examId}:
    get:
      consumes:
      - application/json
      description: Retrieves the inline results of a specific section in an IELTS
        exam
      parameters:
      - description: Section Type
        in: path
        name: sectionType
        required: true
        type: string
      - description: Exam ID
        in: path
        name: examId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetResultResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: Get results by section
      tags:
      - results
  /api/ielts/exam/result/get-results-outline-speaking/{examId}/{partNumber}:
    get:
      consumes:
      - application/json
      description: Retrieves the outline results of the Speaking section in an IELTS
        exam
      parameters:
      - description: Exam ID
        in: path
        name: examId
        required: true
        type: string
      - description: Part Number
        in: path
        name: partNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetResultOutlineSpeakingResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: Get outline of Speaking results
      tags:
      - results
  /api/ielts/exam/result/get-results-outline-writing/{examId}:
    get:
      consumes:
      - application/json
      description: Retrieves the outline results of the Writing section in an IELTS
        exam
      parameters:
      - description: Exam ID
        in: path
        name: examId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetResultOutlineWritingResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: Get outline of Writing results
      tags:
      - results
  /api/ielts/exam/result/get-results-speaking-voice/{voiceName}:
    get:
      consumes:
      - application/json
      description: Retrieves the voice record for a given name from the IELTS speaking
        test
      parameters:
      - description: Voice Record Name
        in: path
        name: voiceName
        required: true
        type: string
      produces:
      - audio/wav
      responses:
        "200":
          description: Returns the requested voice file in audio/wav format
          schema:
            type: file
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: Get a voice record
      tags:
      - results
  /api/ielts/exam/result/top-exam-result/{dataframe}:
    get:
      consumes:
      - application/json
      description: Retrieve top exam results based on the specified dataframe (MONTHLY,
        DAILY, or WEEKLY)
      parameters:
      - description: The timeframe for which to retrieve top exam results (MONTHLY,
          DAILY, WEEKLY)
        in: path
        name: dataframe
        required: true
        type: string
      - description: The page number for pagination
        in: query
        name: page
        required: true
        type: integer
      - description: The number of results per page
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with exam results
          schema:
            $ref: '#/definitions/pb.GetTopExamResult'
        "400":
          description: Bad request with error message
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      summary: ALL
      tags:
      - ielts-exam
  /api/user/get-my-results:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of exam results for the logged-in user
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User's exam results
          schema:
            $ref: '#/definitions/pb.GetExamByUserIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: USER
      tags:
      - ielts-exam
  /api/user/profile:
    get:
      description: Retrieves the profile information of the currently authenticated
        user
      produces:
      - application/json
      responses:
        "200":
          description: User Profile Response
          schema:
            $ref: '#/definitions/pb.User'
        "409":
          description: Conflict Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: USER
      tags:
      - user
  /api/user/update-information:
    put:
      consumes:
      - application/json
      description: Allows a user to update their name and surname
      parameters:
      - description: Name and Surname Update Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pb.UpdateUserNameSurnameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: USER
      tags:
      - user
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
