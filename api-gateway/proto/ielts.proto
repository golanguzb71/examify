syntax = "proto3";

package ielts;

option go_package = "./proto/pb";

import "common.proto";


service IeltsService {
  rpc CreateBook(CreateBookRequest) returns (common.AbsResponse);
  rpc DeleteBook(DeleteBookRequest) returns (common.AbsResponse);
  rpc GetAllBook(Empty) returns (GetAllBookResponse);
  rpc UpdateBookById(UpdateBookRequest) returns(common.AbsResponse);
  rpc CreateAnswer(CreateAnswerRequest) returns (common.AbsResponse);
  rpc DeleteAnswer(DeleteBookRequest) returns (common.AbsResponse);
  rpc GetAnswer(GetAnswerRequest) returns (GetAnswerResponse);
  rpc CreateExam(CreateExamRequest) returns (CreateExamResponse);
  rpc GetExamByUserId(GetExamByUserIdRequest) returns (GetExamByUserIdResponse);
  rpc GetTopExamResultList(GetTopExamRequest) returns (GetTopExamResult);
  rpc CreateAttemptInline(CreateInlineAttemptRequest) returns (common.AbsResponse);
  rpc CreateAttemptOutlineWriting(CreateOutlineAttemptRequestWriting) returns (common.AbsResponse);
  rpc CreateAttemptOutlineSpeaking(CreateOutlineAttemptRequestSpeaking) returns (common.AbsResponse);
}
message UpdateBookRequest{
  string id = 1;
  string name = 2;
}

message CreateBookRequest {
  string name = 1;
}

message GetTopExamRequest{
  string dataframe = 1;
  common.PageRequest pageRequest = 2;
}

message GetTopExamResult{
  repeated Result results = 1;
  int32 totalPageCount = 2;
}

message Result {
  common.User user = 1;
  string bookName = 2;
  string createdAt = 3;
  string overall = 4;
  string speaking = 5;
  string writing = 6;
  string listening = 7;
  string reading = 8;
  string examId = 9;
}

message CreateExamResponse {
  string examId = 1;
}



message GetExamByUserIdResponse {
  repeated GetExamAbsResult results = 1;
  int32 totalPageCount = 2;
}

message GetExamAbsResult{
  string bookName = 2;
  string createdAt = 3;
  string overall = 4;
  string speaking = 5;
  string writing = 6;
  string listening = 7;
  string reading = 8;
  string examId = 9;
  string status = 10;
  int32 remainTimeForEndExam = 11;
}

message CreateExamRequest {
  int32 userId = 1;
  int32 bookId = 2;
}

message GetExamByUserIdRequest {
  int32 userId = 1;
  common.PageRequest pageRequest = 2;
}

message DeleteBookRequest {
  string bookId = 1;
}

message GetAllBookResponse {
  repeated Book books = 1;
}

message CreateAnswerRequest {
  string bookId = 1;
  string sectionType = 2;
  repeated string answers = 3;
}

message GetAnswerRequest {
  string book_id = 1;
}

message GetAnswerResponse {
  repeated Answer answers = 1;
}

message Answer {
  int32 id = 1;
  int32 bookId = 2;
  string sectionType = 3;
  repeated string sectionAnswer = 4;
}

message Book {
  int32 id = 1;
  string title = 2;
}

message CreateInlineAttemptRequest {
  string examId = 1;
  repeated string userAnswer = 2;
  string sectionType = 3;
}

message CreateOutlineAttemptRequestWriting {
  string examId = 1;
  repeated QuestionUserAnswerWriting Qua = 2;
}
message CreateOutlineAttemptRequestSpeaking{
  string examId = 1;
  repeated QuestionUserAnswerSpeaking Qua = 2;
  int32 partNumber = 3;
}

message QuestionUserAnswerWriting {
  string question = 1;
  string userAnswer = 2;
}

message QuestionUserAnswerSpeaking {
  string question = 1;
  bytes voiceAnswer = 2;
}
message Empty {}
