// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: integration.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WritingTaskAbsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *WritingTaskAbsRequest) Reset() {
	*x = WritingTaskAbsRequest{}
	mi := &file_integration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WritingTaskAbsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritingTaskAbsRequest) ProtoMessage() {}

func (x *WritingTaskAbsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritingTaskAbsRequest.ProtoReflect.Descriptor instead.
func (*WritingTaskAbsRequest) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{0}
}

func (x *WritingTaskAbsRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *WritingTaskAbsRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type WritingTaskAbsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feedback             string  `protobuf:"bytes,1,opt,name=feedback,proto3" json:"feedback,omitempty"`
	CoherenceScore       float32 `protobuf:"fixed32,2,opt,name=coherence_score,json=coherenceScore,proto3" json:"coherence_score,omitempty"`
	GrammarScore         float32 `protobuf:"fixed32,3,opt,name=grammar_score,json=grammarScore,proto3" json:"grammar_score,omitempty"`
	LexicalResourceScore float32 `protobuf:"fixed32,4,opt,name=lexical_resource_score,json=lexicalResourceScore,proto3" json:"lexical_resource_score,omitempty"`
	TaskAchievementScore float32 `protobuf:"fixed32,5,opt,name=task_achievement_score,json=taskAchievementScore,proto3" json:"task_achievement_score,omitempty"`
	TaskBandScore        float32 `protobuf:"fixed32,6,opt,name=task_band_score,json=taskBandScore,proto3" json:"task_band_score,omitempty"`
}

func (x *WritingTaskAbsResponse) Reset() {
	*x = WritingTaskAbsResponse{}
	mi := &file_integration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WritingTaskAbsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritingTaskAbsResponse) ProtoMessage() {}

func (x *WritingTaskAbsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritingTaskAbsResponse.ProtoReflect.Descriptor instead.
func (*WritingTaskAbsResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{1}
}

func (x *WritingTaskAbsResponse) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *WritingTaskAbsResponse) GetCoherenceScore() float32 {
	if x != nil {
		return x.CoherenceScore
	}
	return 0
}

func (x *WritingTaskAbsResponse) GetGrammarScore() float32 {
	if x != nil {
		return x.GrammarScore
	}
	return 0
}

func (x *WritingTaskAbsResponse) GetLexicalResourceScore() float32 {
	if x != nil {
		return x.LexicalResourceScore
	}
	return 0
}

func (x *WritingTaskAbsResponse) GetTaskAchievementScore() float32 {
	if x != nil {
		return x.TaskAchievementScore
	}
	return 0
}

func (x *WritingTaskAbsResponse) GetTaskBandScore() float32 {
	if x != nil {
		return x.TaskBandScore
	}
	return 0
}

type SpeakingPartAbsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question     string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	VoiceMessage []byte `protobuf:"bytes,2,opt,name=voice_message,json=voiceMessage,proto3" json:"voice_message,omitempty"`
}

func (x *SpeakingPartAbsRequest) Reset() {
	*x = SpeakingPartAbsRequest{}
	mi := &file_integration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeakingPartAbsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakingPartAbsRequest) ProtoMessage() {}

func (x *SpeakingPartAbsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakingPartAbsRequest.ProtoReflect.Descriptor instead.
func (*SpeakingPartAbsRequest) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{2}
}

func (x *SpeakingPartAbsRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *SpeakingPartAbsRequest) GetVoiceMessage() []byte {
	if x != nil {
		return x.VoiceMessage
	}
	return nil
}

type SpeakingPartAbsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FluencyScore    float32        `protobuf:"fixed32,1,opt,name=fluency_score,json=fluencyScore,proto3" json:"fluency_score,omitempty"`
	GrammarScore    float32        `protobuf:"fixed32,2,opt,name=grammar_score,json=grammarScore,proto3" json:"grammar_score,omitempty"`
	VocabularyScore float32        `protobuf:"fixed32,3,opt,name=vocabulary_score,json=vocabularyScore,proto3" json:"vocabulary_score,omitempty"`
	CoherenceScore  float32        `protobuf:"fixed32,4,opt,name=coherence_score,json=coherenceScore,proto3" json:"coherence_score,omitempty"`
	TopicDevScore   float32        `protobuf:"fixed32,5,opt,name=topic_dev_score,json=topicDevScore,proto3" json:"topic_dev_score,omitempty"`
	RelevanceScore  float32        `protobuf:"fixed32,6,opt,name=relevance_score,json=relevanceScore,proto3" json:"relevance_score,omitempty"`
	WordCount       int32          `protobuf:"varint,7,opt,name=word_count,json=wordCount,proto3" json:"word_count,omitempty"`
	Transcription   *Transcription `protobuf:"bytes,8,opt,name=transcription,proto3" json:"transcription,omitempty"`
	PartBandScore   float32        `protobuf:"fixed32,9,opt,name=part_band_score,json=partBandScore,proto3" json:"part_band_score,omitempty"`
}

func (x *SpeakingPartAbsResponse) Reset() {
	*x = SpeakingPartAbsResponse{}
	mi := &file_integration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeakingPartAbsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakingPartAbsResponse) ProtoMessage() {}

func (x *SpeakingPartAbsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakingPartAbsResponse.ProtoReflect.Descriptor instead.
func (*SpeakingPartAbsResponse) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{3}
}

func (x *SpeakingPartAbsResponse) GetFluencyScore() float32 {
	if x != nil {
		return x.FluencyScore
	}
	return 0
}

func (x *SpeakingPartAbsResponse) GetGrammarScore() float32 {
	if x != nil {
		return x.GrammarScore
	}
	return 0
}

func (x *SpeakingPartAbsResponse) GetVocabularyScore() float32 {
	if x != nil {
		return x.VocabularyScore
	}
	return 0
}

func (x *SpeakingPartAbsResponse) GetCoherenceScore() float32 {
	if x != nil {
		return x.CoherenceScore
	}
	return 0
}

func (x *SpeakingPartAbsResponse) GetTopicDevScore() float32 {
	if x != nil {
		return x.TopicDevScore
	}
	return 0
}

func (x *SpeakingPartAbsResponse) GetRelevanceScore() float32 {
	if x != nil {
		return x.RelevanceScore
	}
	return 0
}

func (x *SpeakingPartAbsResponse) GetWordCount() int32 {
	if x != nil {
		return x.WordCount
	}
	return 0
}

func (x *SpeakingPartAbsResponse) GetTranscription() *Transcription {
	if x != nil {
		return x.Transcription
	}
	return nil
}

func (x *SpeakingPartAbsResponse) GetPartBandScore() float32 {
	if x != nil {
		return x.PartBandScore
	}
	return 0
}

type Transcription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question      string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Feedback      string `protobuf:"bytes,2,opt,name=feedback,proto3" json:"feedback,omitempty"`
	Transcription string `protobuf:"bytes,3,opt,name=transcription,proto3" json:"transcription,omitempty"`
}

func (x *Transcription) Reset() {
	*x = Transcription{}
	mi := &file_integration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transcription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transcription) ProtoMessage() {}

func (x *Transcription) ProtoReflect() protoreflect.Message {
	mi := &file_integration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transcription.ProtoReflect.Descriptor instead.
func (*Transcription) Descriptor() ([]byte, []int) {
	return file_integration_proto_rawDescGZIP(), []int{4}
}

func (x *Transcription) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Transcription) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *Transcription) GetTranscription() string {
	if x != nil {
		return x.Transcription
	}
	return ""
}

var File_integration_proto protoreflect.FileDescriptor

var file_integration_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4b, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x96, 0x02,
	0x0a, 0x16, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x62, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63,
	0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x14, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x61, 0x6e,
	0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x59, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x41, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x91, 0x03, 0x0a, 0x17, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x74, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x6d, 0x6d,
	0x61, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x6f, 0x68,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x76, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x65,
	0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x42, 0x61, 0x6e, 0x64,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x6d, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xd9, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x62, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74,
	0x41, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x74, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_integration_proto_rawDescOnce sync.Once
	file_integration_proto_rawDescData = file_integration_proto_rawDesc
)

func file_integration_proto_rawDescGZIP() []byte {
	file_integration_proto_rawDescOnce.Do(func() {
		file_integration_proto_rawDescData = protoimpl.X.CompressGZIP(file_integration_proto_rawDescData)
	})
	return file_integration_proto_rawDescData
}

var file_integration_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_integration_proto_goTypes = []any{
	(*WritingTaskAbsRequest)(nil),   // 0: integration.WritingTaskAbsRequest
	(*WritingTaskAbsResponse)(nil),  // 1: integration.WritingTaskAbsResponse
	(*SpeakingPartAbsRequest)(nil),  // 2: integration.SpeakingPartAbsRequest
	(*SpeakingPartAbsResponse)(nil), // 3: integration.SpeakingPartAbsResponse
	(*Transcription)(nil),           // 4: integration.Transcription
}
var file_integration_proto_depIdxs = []int32{
	4, // 0: integration.SpeakingPartAbsResponse.transcription:type_name -> integration.Transcription
	0, // 1: integration.IntegrationService.GetResultWritingTask:input_type -> integration.WritingTaskAbsRequest
	2, // 2: integration.IntegrationService.GetResultSpeakingPart:input_type -> integration.SpeakingPartAbsRequest
	1, // 3: integration.IntegrationService.GetResultWritingTask:output_type -> integration.WritingTaskAbsResponse
	3, // 4: integration.IntegrationService.GetResultSpeakingPart:output_type -> integration.SpeakingPartAbsResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_integration_proto_init() }
func file_integration_proto_init() {
	if File_integration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_integration_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_integration_proto_goTypes,
		DependencyIndexes: file_integration_proto_depIdxs,
		MessageInfos:      file_integration_proto_msgTypes,
	}.Build()
	File_integration_proto = out.File
	file_integration_proto_rawDesc = nil
	file_integration_proto_goTypes = nil
	file_integration_proto_depIdxs = nil
}
