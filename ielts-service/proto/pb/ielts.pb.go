// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: ielts.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateBookRequest) Reset() {
	*x = UpdateBookRequest{}
	mi := &file_ielts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBookRequest) ProtoMessage() {}

func (x *UpdateBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBookRequest.ProtoReflect.Descriptor instead.
func (*UpdateBookRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateBookRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateBookRequest) Reset() {
	*x = CreateBookRequest{}
	mi := &file_ielts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookRequest) ProtoMessage() {}

func (x *CreateBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookRequest.ProtoReflect.Descriptor instead.
func (*CreateBookRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTopExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataframe   string       `protobuf:"bytes,1,opt,name=dataframe,proto3" json:"dataframe,omitempty"`
	PageRequest *PageRequest `protobuf:"bytes,2,opt,name=pageRequest,proto3" json:"pageRequest,omitempty"`
}

func (x *GetTopExamRequest) Reset() {
	*x = GetTopExamRequest{}
	mi := &file_ielts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopExamRequest) ProtoMessage() {}

func (x *GetTopExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopExamRequest.ProtoReflect.Descriptor instead.
func (*GetTopExamRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{2}
}

func (x *GetTopExamRequest) GetDataframe() string {
	if x != nil {
		return x.Dataframe
	}
	return ""
}

func (x *GetTopExamRequest) GetPageRequest() *PageRequest {
	if x != nil {
		return x.PageRequest
	}
	return nil
}

type GetTopExamResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results        []*Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalPageCount int32     `protobuf:"varint,2,opt,name=totalPageCount,proto3" json:"totalPageCount,omitempty"`
}

func (x *GetTopExamResult) Reset() {
	*x = GetTopExamResult{}
	mi := &file_ielts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTopExamResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopExamResult) ProtoMessage() {}

func (x *GetTopExamResult) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopExamResult.ProtoReflect.Descriptor instead.
func (*GetTopExamResult) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{3}
}

func (x *GetTopExamResult) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetTopExamResult) GetTotalPageCount() int32 {
	if x != nil {
		return x.TotalPageCount
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	BookName  string `protobuf:"bytes,2,opt,name=bookName,proto3" json:"bookName,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Overall   string `protobuf:"bytes,4,opt,name=overall,proto3" json:"overall,omitempty"`
	Speaking  string `protobuf:"bytes,5,opt,name=speaking,proto3" json:"speaking,omitempty"`
	Writing   string `protobuf:"bytes,6,opt,name=writing,proto3" json:"writing,omitempty"`
	Listening string `protobuf:"bytes,7,opt,name=listening,proto3" json:"listening,omitempty"`
	Reading   string `protobuf:"bytes,8,opt,name=reading,proto3" json:"reading,omitempty"`
	ExamId    string `protobuf:"bytes,9,opt,name=examId,proto3" json:"examId,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_ielts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{4}
}

func (x *Result) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Result) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *Result) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Result) GetOverall() string {
	if x != nil {
		return x.Overall
	}
	return ""
}

func (x *Result) GetSpeaking() string {
	if x != nil {
		return x.Speaking
	}
	return ""
}

func (x *Result) GetWriting() string {
	if x != nil {
		return x.Writing
	}
	return ""
}

func (x *Result) GetListening() string {
	if x != nil {
		return x.Listening
	}
	return ""
}

func (x *Result) GetReading() string {
	if x != nil {
		return x.Reading
	}
	return ""
}

func (x *Result) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

type CreateExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamId string `protobuf:"bytes,1,opt,name=examId,proto3" json:"examId,omitempty"`
}

func (x *CreateExamResponse) Reset() {
	*x = CreateExamResponse{}
	mi := &file_ielts_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExamResponse) ProtoMessage() {}

func (x *CreateExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExamResponse.ProtoReflect.Descriptor instead.
func (*CreateExamResponse) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{5}
}

func (x *CreateExamResponse) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

type GetExamByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results        []*GetExamAbsResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalPageCount int32               `protobuf:"varint,2,opt,name=totalPageCount,proto3" json:"totalPageCount,omitempty"`
}

func (x *GetExamByUserIdResponse) Reset() {
	*x = GetExamByUserIdResponse{}
	mi := &file_ielts_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExamByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamByUserIdResponse) ProtoMessage() {}

func (x *GetExamByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetExamByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{6}
}

func (x *GetExamByUserIdResponse) GetResults() []*GetExamAbsResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetExamByUserIdResponse) GetTotalPageCount() int32 {
	if x != nil {
		return x.TotalPageCount
	}
	return 0
}

type GetExamAbsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName             string `protobuf:"bytes,2,opt,name=bookName,proto3" json:"bookName,omitempty"`
	CreatedAt            string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Overall              string `protobuf:"bytes,4,opt,name=overall,proto3" json:"overall,omitempty"`
	Speaking             string `protobuf:"bytes,5,opt,name=speaking,proto3" json:"speaking,omitempty"`
	Writing              string `protobuf:"bytes,6,opt,name=writing,proto3" json:"writing,omitempty"`
	Listening            string `protobuf:"bytes,7,opt,name=listening,proto3" json:"listening,omitempty"`
	Reading              string `protobuf:"bytes,8,opt,name=reading,proto3" json:"reading,omitempty"`
	ExamId               string `protobuf:"bytes,9,opt,name=examId,proto3" json:"examId,omitempty"`
	Status               string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	RemainTimeForEndExam int32  `protobuf:"varint,11,opt,name=remainTimeForEndExam,proto3" json:"remainTimeForEndExam,omitempty"`
}

func (x *GetExamAbsResult) Reset() {
	*x = GetExamAbsResult{}
	mi := &file_ielts_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExamAbsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamAbsResult) ProtoMessage() {}

func (x *GetExamAbsResult) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamAbsResult.ProtoReflect.Descriptor instead.
func (*GetExamAbsResult) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{7}
}

func (x *GetExamAbsResult) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *GetExamAbsResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetExamAbsResult) GetOverall() string {
	if x != nil {
		return x.Overall
	}
	return ""
}

func (x *GetExamAbsResult) GetSpeaking() string {
	if x != nil {
		return x.Speaking
	}
	return ""
}

func (x *GetExamAbsResult) GetWriting() string {
	if x != nil {
		return x.Writing
	}
	return ""
}

func (x *GetExamAbsResult) GetListening() string {
	if x != nil {
		return x.Listening
	}
	return ""
}

func (x *GetExamAbsResult) GetReading() string {
	if x != nil {
		return x.Reading
	}
	return ""
}

func (x *GetExamAbsResult) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *GetExamAbsResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetExamAbsResult) GetRemainTimeForEndExam() int32 {
	if x != nil {
		return x.RemainTimeForEndExam
	}
	return 0
}

type CreateExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	BookId int32 `protobuf:"varint,2,opt,name=bookId,proto3" json:"bookId,omitempty"`
}

func (x *CreateExamRequest) Reset() {
	*x = CreateExamRequest{}
	mi := &file_ielts_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExamRequest) ProtoMessage() {}

func (x *CreateExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExamRequest.ProtoReflect.Descriptor instead.
func (*CreateExamRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{8}
}

func (x *CreateExamRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateExamRequest) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

type GetExamByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32        `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PageRequest *PageRequest `protobuf:"bytes,2,opt,name=pageRequest,proto3" json:"pageRequest,omitempty"`
}

func (x *GetExamByUserIdRequest) Reset() {
	*x = GetExamByUserIdRequest{}
	mi := &file_ielts_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExamByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamByUserIdRequest) ProtoMessage() {}

func (x *GetExamByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetExamByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{9}
}

func (x *GetExamByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetExamByUserIdRequest) GetPageRequest() *PageRequest {
	if x != nil {
		return x.PageRequest
	}
	return nil
}

type DeleteBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId string `protobuf:"bytes,1,opt,name=bookId,proto3" json:"bookId,omitempty"`
}

func (x *DeleteBookRequest) Reset() {
	*x = DeleteBookRequest{}
	mi := &file_ielts_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBookRequest) ProtoMessage() {}

func (x *DeleteBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBookRequest.ProtoReflect.Descriptor instead.
func (*DeleteBookRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteBookRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

type GetAllBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*Book `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
}

func (x *GetAllBookResponse) Reset() {
	*x = GetAllBookResponse{}
	mi := &file_ielts_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBookResponse) ProtoMessage() {}

func (x *GetAllBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBookResponse.ProtoReflect.Descriptor instead.
func (*GetAllBookResponse) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllBookResponse) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

type CreateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId      string   `protobuf:"bytes,1,opt,name=bookId,proto3" json:"bookId,omitempty"`
	SectionType string   `protobuf:"bytes,2,opt,name=sectionType,proto3" json:"sectionType,omitempty"`
	Answers     []string `protobuf:"bytes,3,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *CreateAnswerRequest) Reset() {
	*x = CreateAnswerRequest{}
	mi := &file_ielts_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnswerRequest) ProtoMessage() {}

func (x *CreateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnswerRequest.ProtoReflect.Descriptor instead.
func (*CreateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{12}
}

func (x *CreateAnswerRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *CreateAnswerRequest) GetSectionType() string {
	if x != nil {
		return x.SectionType
	}
	return ""
}

func (x *CreateAnswerRequest) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

type GetAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId string `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *GetAnswerRequest) Reset() {
	*x = GetAnswerRequest{}
	mi := &file_ielts_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerRequest) ProtoMessage() {}

func (x *GetAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerRequest.ProtoReflect.Descriptor instead.
func (*GetAnswerRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{13}
}

func (x *GetAnswerRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

type GetAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answers []*Answer `protobuf:"bytes,1,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *GetAnswerResponse) Reset() {
	*x = GetAnswerResponse{}
	mi := &file_ielts_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerResponse) ProtoMessage() {}

func (x *GetAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerResponse.ProtoReflect.Descriptor instead.
func (*GetAnswerResponse) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{14}
}

func (x *GetAnswerResponse) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BookId        int32    `protobuf:"varint,2,opt,name=bookId,proto3" json:"bookId,omitempty"`
	SectionType   string   `protobuf:"bytes,3,opt,name=sectionType,proto3" json:"sectionType,omitempty"`
	SectionAnswer []string `protobuf:"bytes,4,rep,name=sectionAnswer,proto3" json:"sectionAnswer,omitempty"`
}

func (x *Answer) Reset() {
	*x = Answer{}
	mi := &file_ielts_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{15}
}

func (x *Answer) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Answer) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *Answer) GetSectionType() string {
	if x != nil {
		return x.SectionType
	}
	return ""
}

func (x *Answer) GetSectionAnswer() []string {
	if x != nil {
		return x.SectionAnswer
	}
	return nil
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	mi := &file_ielts_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{16}
}

func (x *Book) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Book) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CreateInlineAttemptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamId      string   `protobuf:"bytes,1,opt,name=examId,proto3" json:"examId,omitempty"`
	UserAnswer  []string `protobuf:"bytes,2,rep,name=userAnswer,proto3" json:"userAnswer,omitempty"`
	SectionType string   `protobuf:"bytes,3,opt,name=sectionType,proto3" json:"sectionType,omitempty"`
}

func (x *CreateInlineAttemptRequest) Reset() {
	*x = CreateInlineAttemptRequest{}
	mi := &file_ielts_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInlineAttemptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInlineAttemptRequest) ProtoMessage() {}

func (x *CreateInlineAttemptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInlineAttemptRequest.ProtoReflect.Descriptor instead.
func (*CreateInlineAttemptRequest) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{17}
}

func (x *CreateInlineAttemptRequest) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *CreateInlineAttemptRequest) GetUserAnswer() []string {
	if x != nil {
		return x.UserAnswer
	}
	return nil
}

func (x *CreateInlineAttemptRequest) GetSectionType() string {
	if x != nil {
		return x.SectionType
	}
	return ""
}

type CreateOutlineAttemptRequestWriting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamId string                       `protobuf:"bytes,1,opt,name=examId,proto3" json:"examId,omitempty"`
	Qua    []*QuestionUserAnswerWriting `protobuf:"bytes,2,rep,name=Qua,proto3" json:"Qua,omitempty"`
}

func (x *CreateOutlineAttemptRequestWriting) Reset() {
	*x = CreateOutlineAttemptRequestWriting{}
	mi := &file_ielts_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOutlineAttemptRequestWriting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutlineAttemptRequestWriting) ProtoMessage() {}

func (x *CreateOutlineAttemptRequestWriting) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutlineAttemptRequestWriting.ProtoReflect.Descriptor instead.
func (*CreateOutlineAttemptRequestWriting) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{18}
}

func (x *CreateOutlineAttemptRequestWriting) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *CreateOutlineAttemptRequestWriting) GetQua() []*QuestionUserAnswerWriting {
	if x != nil {
		return x.Qua
	}
	return nil
}

type CreateOutlineAttemptRequestSpeaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamId     string                        `protobuf:"bytes,1,opt,name=examId,proto3" json:"examId,omitempty"`
	Qua        []*QuestionUserAnswerSpeaking `protobuf:"bytes,2,rep,name=Qua,proto3" json:"Qua,omitempty"`
	PartNumber int32                         `protobuf:"varint,3,opt,name=partNumber,proto3" json:"partNumber,omitempty"`
}

func (x *CreateOutlineAttemptRequestSpeaking) Reset() {
	*x = CreateOutlineAttemptRequestSpeaking{}
	mi := &file_ielts_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOutlineAttemptRequestSpeaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutlineAttemptRequestSpeaking) ProtoMessage() {}

func (x *CreateOutlineAttemptRequestSpeaking) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutlineAttemptRequestSpeaking.ProtoReflect.Descriptor instead.
func (*CreateOutlineAttemptRequestSpeaking) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{19}
}

func (x *CreateOutlineAttemptRequestSpeaking) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *CreateOutlineAttemptRequestSpeaking) GetQua() []*QuestionUserAnswerSpeaking {
	if x != nil {
		return x.Qua
	}
	return nil
}

func (x *CreateOutlineAttemptRequestSpeaking) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

type QuestionUserAnswerWriting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question   string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	UserAnswer string `protobuf:"bytes,2,opt,name=userAnswer,proto3" json:"userAnswer,omitempty"`
}

func (x *QuestionUserAnswerWriting) Reset() {
	*x = QuestionUserAnswerWriting{}
	mi := &file_ielts_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionUserAnswerWriting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionUserAnswerWriting) ProtoMessage() {}

func (x *QuestionUserAnswerWriting) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionUserAnswerWriting.ProtoReflect.Descriptor instead.
func (*QuestionUserAnswerWriting) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{20}
}

func (x *QuestionUserAnswerWriting) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionUserAnswerWriting) GetUserAnswer() string {
	if x != nil {
		return x.UserAnswer
	}
	return ""
}

type QuestionUserAnswerSpeaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question    string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	VoiceAnswer []byte `protobuf:"bytes,2,opt,name=voiceAnswer,proto3" json:"voiceAnswer,omitempty"`
}

func (x *QuestionUserAnswerSpeaking) Reset() {
	*x = QuestionUserAnswerSpeaking{}
	mi := &file_ielts_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionUserAnswerSpeaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionUserAnswerSpeaking) ProtoMessage() {}

func (x *QuestionUserAnswerSpeaking) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionUserAnswerSpeaking.ProtoReflect.Descriptor instead.
func (*QuestionUserAnswerSpeaking) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{21}
}

func (x *QuestionUserAnswerSpeaking) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionUserAnswerSpeaking) GetVoiceAnswer() []byte {
	if x != nil {
		return x.VoiceAnswer
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_ielts_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ielts_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ielts_proto_rawDescGZIP(), []int{22}
}

var File_ielts_proto protoreflect.FileDescriptor

var file_ielts_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x37, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x45, 0x78,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x84, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb8,
	0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x6f, 0x72, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x67,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f,
	0x6f, 0x6b, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x69, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x2b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x65,
	0x6c, 0x74, 0x73, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x22, 0x78, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x2c, 0x0a,
	0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x76, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x70, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x03, 0x51, 0x75, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x03, 0x51, 0x75, 0x61, 0x22, 0x92, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x78, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x51, 0x75, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x03, 0x51, 0x75, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x19, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xaf, 0x07, 0x0a, 0x0c, 0x49, 0x65, 0x6c,
	0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x0c, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x19, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x69, 0x65,
	0x6c, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61,
	0x6d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69,
	0x6e, 0x65, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x72, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ielts_proto_rawDescOnce sync.Once
	file_ielts_proto_rawDescData = file_ielts_proto_rawDesc
)

func file_ielts_proto_rawDescGZIP() []byte {
	file_ielts_proto_rawDescOnce.Do(func() {
		file_ielts_proto_rawDescData = protoimpl.X.CompressGZIP(file_ielts_proto_rawDescData)
	})
	return file_ielts_proto_rawDescData
}

var file_ielts_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_ielts_proto_goTypes = []any{
	(*UpdateBookRequest)(nil),                   // 0: ielts.UpdateBookRequest
	(*CreateBookRequest)(nil),                   // 1: ielts.CreateBookRequest
	(*GetTopExamRequest)(nil),                   // 2: ielts.GetTopExamRequest
	(*GetTopExamResult)(nil),                    // 3: ielts.GetTopExamResult
	(*Result)(nil),                              // 4: ielts.Result
	(*CreateExamResponse)(nil),                  // 5: ielts.CreateExamResponse
	(*GetExamByUserIdResponse)(nil),             // 6: ielts.GetExamByUserIdResponse
	(*GetExamAbsResult)(nil),                    // 7: ielts.GetExamAbsResult
	(*CreateExamRequest)(nil),                   // 8: ielts.CreateExamRequest
	(*GetExamByUserIdRequest)(nil),              // 9: ielts.GetExamByUserIdRequest
	(*DeleteBookRequest)(nil),                   // 10: ielts.DeleteBookRequest
	(*GetAllBookResponse)(nil),                  // 11: ielts.GetAllBookResponse
	(*CreateAnswerRequest)(nil),                 // 12: ielts.CreateAnswerRequest
	(*GetAnswerRequest)(nil),                    // 13: ielts.GetAnswerRequest
	(*GetAnswerResponse)(nil),                   // 14: ielts.GetAnswerResponse
	(*Answer)(nil),                              // 15: ielts.Answer
	(*Book)(nil),                                // 16: ielts.Book
	(*CreateInlineAttemptRequest)(nil),          // 17: ielts.CreateInlineAttemptRequest
	(*CreateOutlineAttemptRequestWriting)(nil),  // 18: ielts.CreateOutlineAttemptRequestWriting
	(*CreateOutlineAttemptRequestSpeaking)(nil), // 19: ielts.CreateOutlineAttemptRequestSpeaking
	(*QuestionUserAnswerWriting)(nil),           // 20: ielts.QuestionUserAnswerWriting
	(*QuestionUserAnswerSpeaking)(nil),          // 21: ielts.QuestionUserAnswerSpeaking
	(*Empty)(nil),                               // 22: ielts.Empty
	(*PageRequest)(nil),                         // 23: common.PageRequest
	(*User)(nil),                                // 24: common.User
	(*AbsResponse)(nil),                         // 25: common.AbsResponse
}
var file_ielts_proto_depIdxs = []int32{
	23, // 0: ielts.GetTopExamRequest.pageRequest:type_name -> common.PageRequest
	4,  // 1: ielts.GetTopExamResult.results:type_name -> ielts.Result
	24, // 2: ielts.Result.user:type_name -> common.User
	7,  // 3: ielts.GetExamByUserIdResponse.results:type_name -> ielts.GetExamAbsResult
	23, // 4: ielts.GetExamByUserIdRequest.pageRequest:type_name -> common.PageRequest
	16, // 5: ielts.GetAllBookResponse.books:type_name -> ielts.Book
	15, // 6: ielts.GetAnswerResponse.answers:type_name -> ielts.Answer
	20, // 7: ielts.CreateOutlineAttemptRequestWriting.Qua:type_name -> ielts.QuestionUserAnswerWriting
	21, // 8: ielts.CreateOutlineAttemptRequestSpeaking.Qua:type_name -> ielts.QuestionUserAnswerSpeaking
	1,  // 9: ielts.IeltsService.CreateBook:input_type -> ielts.CreateBookRequest
	10, // 10: ielts.IeltsService.DeleteBook:input_type -> ielts.DeleteBookRequest
	22, // 11: ielts.IeltsService.GetAllBook:input_type -> ielts.Empty
	0,  // 12: ielts.IeltsService.UpdateBookById:input_type -> ielts.UpdateBookRequest
	12, // 13: ielts.IeltsService.CreateAnswer:input_type -> ielts.CreateAnswerRequest
	10, // 14: ielts.IeltsService.DeleteAnswer:input_type -> ielts.DeleteBookRequest
	13, // 15: ielts.IeltsService.GetAnswer:input_type -> ielts.GetAnswerRequest
	8,  // 16: ielts.IeltsService.CreateExam:input_type -> ielts.CreateExamRequest
	9,  // 17: ielts.IeltsService.GetExamByUserId:input_type -> ielts.GetExamByUserIdRequest
	2,  // 18: ielts.IeltsService.GetTopExamResultList:input_type -> ielts.GetTopExamRequest
	17, // 19: ielts.IeltsService.CreateAttemptInline:input_type -> ielts.CreateInlineAttemptRequest
	18, // 20: ielts.IeltsService.CreateAttemptOutlineWriting:input_type -> ielts.CreateOutlineAttemptRequestWriting
	19, // 21: ielts.IeltsService.CreateAttemptOutlineSpeaking:input_type -> ielts.CreateOutlineAttemptRequestSpeaking
	25, // 22: ielts.IeltsService.CreateBook:output_type -> common.AbsResponse
	25, // 23: ielts.IeltsService.DeleteBook:output_type -> common.AbsResponse
	11, // 24: ielts.IeltsService.GetAllBook:output_type -> ielts.GetAllBookResponse
	25, // 25: ielts.IeltsService.UpdateBookById:output_type -> common.AbsResponse
	25, // 26: ielts.IeltsService.CreateAnswer:output_type -> common.AbsResponse
	25, // 27: ielts.IeltsService.DeleteAnswer:output_type -> common.AbsResponse
	14, // 28: ielts.IeltsService.GetAnswer:output_type -> ielts.GetAnswerResponse
	5,  // 29: ielts.IeltsService.CreateExam:output_type -> ielts.CreateExamResponse
	6,  // 30: ielts.IeltsService.GetExamByUserId:output_type -> ielts.GetExamByUserIdResponse
	3,  // 31: ielts.IeltsService.GetTopExamResultList:output_type -> ielts.GetTopExamResult
	25, // 32: ielts.IeltsService.CreateAttemptInline:output_type -> common.AbsResponse
	25, // 33: ielts.IeltsService.CreateAttemptOutlineWriting:output_type -> common.AbsResponse
	25, // 34: ielts.IeltsService.CreateAttemptOutlineSpeaking:output_type -> common.AbsResponse
	22, // [22:35] is the sub-list for method output_type
	9,  // [9:22] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ielts_proto_init() }
func file_ielts_proto_init() {
	if File_ielts_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ielts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ielts_proto_goTypes,
		DependencyIndexes: file_ielts_proto_depIdxs,
		MessageInfos:      file_ielts_proto_msgTypes,
	}.Build()
	File_ielts_proto = out.File
	file_ielts_proto_rawDesc = nil
	file_ielts_proto_goTypes = nil
	file_ielts_proto_depIdxs = nil
}
